{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","title","completed","classNames","TodoList","todos","map","username","getUser","userId","usersFromServer","find","App","useState","setTitle","hasTitleError","setHasTitleError","setUserId","hasUserError","setHasUserError","action","method","onSubmit","event","preventDefault","newTodo","Math","max","push","type","placeholder","value","onChange","target","replace","trimStart","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.80f75e00.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <li\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </li>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <ul className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </ul>\n  );\n};\n","export default [\r\n  {\r\n    id: 1,\r\n    name: 'Leanne Graham',\r\n    username: 'Bret',\r\n    email: 'Sincere@april.biz',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Ervin Howell',\r\n    username: 'Antonette',\r\n    email: 'Shanna@melissa.tv',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Clementine Bauch',\r\n    username: 'Samantha',\r\n    email: 'Nathan@yesenia.net',\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Patricia Lebsack',\r\n    username: 'Karianne',\r\n    email: 'Julianne.OConner@kory.org',\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Chelsey Dietrich',\r\n    username: 'Kamren',\r\n    email: 'Lucio_Hettinger@annie.ca',\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'Mrs. Dennis Schulist',\r\n    username: 'Leopoldo_Corkery',\r\n    email: 'Karley_Dach@jasper.info',\r\n  },\r\n  {\r\n    id: 7,\r\n    name: 'Kurtis Weissnat',\r\n    username: 'Elwyn.Skiles',\r\n    email: 'Telly.Hoeger@billy.biz',\r\n  },\r\n  {\r\n    id: 8,\r\n    name: 'Nicholas Runolfsdottir V',\r\n    username: 'Maxime_Nienow',\r\n    email: 'Sherwood@rosamond.me',\r\n  },\r\n  {\r\n    id: 9,\r\n    name: 'Glenna Reichert',\r\n    username: 'Delphine',\r\n    email: 'Chaim_McDermott@dana.io',\r\n  },\r\n  {\r\n    id: 10,\r\n    name: 'Clementina DuBuque',\r\n    username: 'Moriah.Stanton',\r\n    email: 'Rey.Padberg@karina.biz',\r\n  },\r\n];\r\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nconst getUser = (userId: number): User | null => {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n};\n\nconst todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [userId, setUserId] = useState(0);\n  const [hasUserError, setHasUserError] = useState(false);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setHasTitleError(!title);\n    setHasUserError(!userId);\n\n    if (!title || !userId) {\n      return;\n    }\n\n    const newTodo = {\n      id: Math.max(...todos.map(todo => todo.id)) + 1,\n      title,\n      completed: false,\n      userId,\n      user: getUser(userId),\n    };\n\n    todos.push(newTodo);\n\n    setTitle('');\n    setUserId(0);\n  };\n\n  const handleChangeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value\n      .replace(/[^a-z0-9а-я\\s]/gi, '')\n      .trimStart());\n    setHasTitleError(false);\n  };\n\n  const handleChangeUserId = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/users\" method=\"POST\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label>\n            Title:&nbsp;\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              name=\"title\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={handleChangeTitle}\n            />\n          </label>\n\n          {hasTitleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:&nbsp;\n            <select\n              data-cy=\"userSelect\"\n              name=\"user\"\n              value={userId}\n              onChange={handleChangeUserId}\n            >\n              <option value={0} disabled>Choose a user</option>\n              {\n                usersFromServer.map(user => (\n                  <option value={user.id} key={user.id}>\n                    {user.name}\n                  </option>\n                ))\n              }\n            </select>\n          </label>\n\n          {hasUserError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\r\n  {\r\n    id: 1,\r\n    title: 'delectus aut autem',\r\n    completed: true,\r\n    userId: 1,\r\n  },\r\n  {\r\n    id: 15,\r\n    title: 'some other todo',\r\n    completed: false,\r\n    userId: 1,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'quis ut nam facilis et officia qui',\r\n    completed: false,\r\n    userId: 4,\r\n  },\r\n];\r\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}